datasource db {
  provider = "postgresql"
  url      = "postgres://cts-user:cts_2024@127.0.0.1:5432/CTS_DB" // url format: postgresql://[user]:[password]@[host]:[port]/[database]
  // postgres://<username>:<password>@<host>:<port>/<database>
}

generator client {
  provider = "prisma-client-js"
  // binaryTargets = ["native", "debian-openssl-3.0.x"]
}

model Client {
  id           String   @id @default(cuid())
  clientId     String   @unique
  clientSecret String   @unique
  realmId      String   @default("master")
  authProtocol String   @default("openid-connect")
  adminUser    String   @default("admin")
  serverUrl    String   @default("https://keycloak.example.com:8080")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

// create a history model, that will save the history of upload users page so that the admin can have a global view on what users been uploaded successfuly and what users failed + axios error response to help in debugging
model User {
  id        String    @id @default(cuid())
  username  String
  historyId String?
  History   History[] @relation("HistoryUser")
}

model History {
  id      String @id @default(cuid())
  userId  String
  user    User   @relation("HistoryUser", fields: [userId], references: [id])
  error   Json?
  batchId String
  batch   Batch  @relation(fields: [batchId], references: [id])
}

model Batch {
  id        String    @id @default(cuid())
  batchName String
  histories History[]
  timestamp DateTime  @default(now()) // When the batch was created
}
